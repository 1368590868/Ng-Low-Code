/* You can add global styles to this file, and also import other style files */
html {
  font-size: 12px;
  width: 100%;
  height: 100%;
  @media (min-width: 2100px) {
    font-size: 14px;
  }
  @media screen and (min-width: 2500px) {
    font-size: 16px;
  }
}

* {
  padding: 0;
  margin: 0;
}

:root {
  --transition-duration: 0.2s;
}

body {
  height: 100%;
  font-weight: 400;
  background-color: var(--surface-ground);
  color: var(--text-color);
  font-family: var(--font-family);
}

::-webkit-scrollbar {
  width: 0.5rem;
  height: 0.5rem;
}

::-webkit-scrollbar-track {
  background-color: var(--surface-100);
  border-radius: 0;
  transition: all var(--transition-duration);
}
::-webkit-scrollbar-corner {
  background-color: var(--surface-100);
}
/* Handle */
::-webkit-scrollbar-thumb {
  background-color: var(--surface-400);
  border-radius: 0;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background-color: var(--primary-color);
}

.layout-content {
  margin-left: auto !important;
  margin-right: auto !important;
  min-height: calc(100% - 7rem);
}

.article-content {
  max-width: 1600px;
  padding: 0 2rem;
  ul,
  ol {
    padding: 0 3rem;
  }
}

.p-card {
  position: relative;
  overflow: hidden;
  height: 100%;
  box-shadow: 0 0px 2px -1px rgb(0 0 0 / 20%), 0 0px 2px 0 rgb(0 0 0 / 14%), 0 0px 3px 0 rgb(0 0 0 / 12%);
}

/* ngx formly style */
formly-form {
  .p-field {
    margin-bottom: 1rem;
    label {
      line-height: 1.5rem;
    }
    .p-field-radiobutton {
      padding-top: 0.5rem;
    }
  }
  &.horizontal {
    .p-field {
      display: flex;
      align-items: flex-start;
      flex-wrap: wrap;
      position: relative;
      small.p-error {
        width: 60%;
        margin-left: auto;
      }
      label {
        width: 40%;
        margin-top: 0.4167rem;
        & + * {
          width: 60%;
        }
      }
      .p-checkbox-label {
        display: none;
      }
      .p-field-checkbox {
        margin-top: 0.4167rem;
      }
    }
  }
}

.p-orderlist-item.cdk-drag-preview {
  z-index: 9999 !important;
}

.p-dialog {
  transform: none !important;
  .p-dialog-footer {
    padding: 1.5rem 1.5rem 1.5rem 1.5rem;
    button {
      margin-right: 0;
    }
    p-button + p-button {
      margin-left: 0.5rem;
    }
  }
}

.p-inputwrapper-filled .p-multiselect.p-multiselect-chip .p-multiselect-label {
  display: flex;
  flex-wrap: wrap;
  .p-multiselect-token {
    max-width: 100%;
    .p-multiselect-token-label {
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }
}

.p-inputtextarea {
  min-height: 6.5rem;
}

// override placeholder color start
.p-multiselect .p-multiselect-label.p-placeholder {
  color: var(--gray-400);
}
.p-treeselect .p-treeselect-label.p-placeholder {
  color: var(--gray-400);
}
.p-cascadeselect .p-cascadeselect-label.p-placeholder {
  color: var(--gray-400);
}
.p-dropdown .p-dropdown-label.p-placeholder {
  color: var(--gray-400);
}
::-webkit-input-placeholder {
  color: var(--gray-400);
}

:-moz-placeholder {
  color: var(--gray-400);
}

::-moz-placeholder {
  color: var(--gray-400);
}

:-ms-input-placeholder {
  color: var(--gray-400);
}
// override placeholder color end

.p-dialog-content {
  white-space: pre-line;
}

.monaco-editor-wrapper {
  background-color: #eeeeee;
  border: 1px solid #ced4da;
  transition: var(--transition-duration);
  margin-bottom: 0.25rem;

  .monaco-editor {
    background: transparent;
    .monaco-editor-background {
      background: transparent;
    }
    .decorationsOverviewRuler,
    .scroll-decoration {
      display: none !important;
    }
  }

  &.ng-dirty.ng-invalid {
    border-color: #e24c4c;
  }
  &:focus-within {
    outline: 0 none;
    outline-offset: 0;
    box-shadow: 0 0 0 0.2rem #c7d2fe;
    border-color: var(--primary-color);
  }
  &:hover {
    border-color: var(--primary-color);
  }
}

.p-tooltip {
  max-width: 20rem;
  a {
    color: #fff;
  }
  &.tooltip-error {
    .p-tooltip-text {
      background: var(--red-100);
      color: var(--red-400);
    }
    .p-tooltip-arrow {
      display: none;
    }
  }

  &.tooltip-success {
    .p-tooltip-text {
      background: var(--green-100);
      color: var(--green-400);
    }
    .p-tooltip-arrow {
      display: none;
    }
  }
}

.p-datatable {
  .p-datatable-tbody > tr > td {
    padding: 0.625rem;
    text-overflow: ellipsis;
  }
  .p-datatable-thead > tr > th {
    padding: 0.625rem;
    .p-icon-wrapper {
      display: inline;
      svg {
        display: inline;
      }
    }
  }
}

.p-column-filter-overlay {
  min-width: 15rem;
}

.p-checkbox {
  width: 1.571rem;
  height: 1.571rem;
  .p-checkbox-box {
    width: 1.571rem;
    height: 1.571rem;
  }
}

.p-inputnumber {
  .p-inputnumber-button {
    line-height: 1;
  }
}

.p-toast {
  .p-toast-detail {
    overflow-wrap: anywhere;
  }
}

.fa-no-icon:before {
  content: '\f2799';
}

.p-datatable-loading-overlay {
  background-color: rgba(255, 255, 255, 0.6) !important;
}
