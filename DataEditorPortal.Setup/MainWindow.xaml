<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Setup"
    x:Class="Setup.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="600" WindowStartupLocation="CenterScreen" Loaded="Window_Loaded">
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type FrameworkElement}" x:Key="ValidatingControl">
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="True">
                        <Setter Property="ToolTip" Value="{Binding Path=(Validation.Errors)/ErrorContent,RelativeSource={x:Static RelativeSource.Self}}"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <Grid.LayoutTransform>
            <TransformGroup>
                <ScaleTransform ScaleX="1.2" ScaleY="1.2"/>
                <SkewTransform/>
                <RotateTransform/>
                <TranslateTransform/>
            </TransformGroup>
        </Grid.LayoutTransform>
        <Grid x:Name="containerConnection" Visibility="Visible">
            <DataGrid x:Name="dataGridConnection" ItemsSource="{Binding}" Margin="10,87,10,40" AutoGenerateColumns="False" ColumnWidth="SizeToHeader" GridLinesVisibility="Horizontal" HorizontalGridLinesBrush="Gainsboro" CanUserAddRows="False">
                <DataGrid.RowStyle>
                    <Style TargetType="{x:Type DataGridRow}">
                        <EventSetter Event="Control.MouseDoubleClick" Handler="dataGridRow_MouseDoubleClick"/>
                    </Style>
                </DataGrid.RowStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn CanUserSort="False" CanUserResize="False" CanUserReorder="False" Header="Name" Binding="{Binding ConnectionName}" IsReadOnly="True" Width="Auto" MinWidth="100"/>
                    <DataGridTemplateColumn CanUserSort="False" CanUserResize="False" CanUserReorder="False" Header="Connection String" IsReadOnly="True" MinWidth="300">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding ConnectionString}"
                               TextTrimming="CharacterEllipsis">
                                    <TextBlock.ToolTip>
                                        <ToolTip Content="{Binding ConnectionString}" 
                                     Placement="Mouse" 
                                     HorizontalAlignment="Center"/>
                                    </TextBlock.ToolTip>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Button x:Name="btnConnectionNext" Content="Next" Margin="0,0,10,10" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="50" Click="btnConnectionNext_Click"/>
            <Button x:Name="btnAddConnection" Content="Add" Margin="0,0,75,10" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="50" Click="btnAddConnection_Click"/>
            <TextBlock x:Name="textBlock1" HorizontalAlignment="Left" Margin="10,20,0,0" Text="Setup Database" TextWrapping="Wrap" VerticalAlignment="Top" RenderTransformOrigin="0.881,0.559" FontSize="16"/>
            <ComboBox x:Name="comboBox" HorizontalAlignment="Left" Margin="125,59,0,0" VerticalAlignment="Top" Width="120" IsTextSearchEnabled="False" SelectedValue="{Binding DatabaseProvider.Value, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}, UpdateSourceTrigger=PropertyChanged}" SelectedIndex="0" SelectionChanged="comboBox_SelectionChanged" SelectedValuePath="Tag" Padding="6,3,5,3">
                <ComboBoxItem Content="Sql Connection" Tag="SqlConnection" />
                <ComboBoxItem Content="Oracle" Tag="Oracle"/>
            </ComboBox>
            <Label x:Name="label6" Content="Database Provider:" HorizontalAlignment="Left" Margin="11,60,0,0" VerticalAlignment="Top" Height="20" Padding="0,0,0,0"/>
        </Grid>
        <Grid x:Name="containerAdmin" Visibility="Hidden">
            <Label x:Name="label" Content="Username:" HorizontalAlignment="Left" Margin="10,87,0,0" VerticalAlignment="Top" Height="20" Padding="0,0,0,0" RenderTransformOrigin="1.05,0.864"/>
            <Label x:Name="label1" Content="Password:" HorizontalAlignment="Left" Margin="10,115,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.335,0.584" Height="20" Padding="0,0,0,0"/>
            <TextBox x:Name="textUsername" Margin="98,87,164,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="20" Style="{DynamicResource ValidatingControl}" Padding="3,1,3,0">
                <TextBox.Text>
                    <Binding Path="Administrator.Username" UpdateSourceTrigger="PropertyChanged" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule ValidatesOnTargetUpdated="False"></DataErrorValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <PasswordBox x:Name="textPassword" Margin="98,115,164,0" VerticalAlignment="Top" Height="20" local:PasswordHelper.BindPassword="True" Style="{DynamicResource ValidatingControl}" Padding="3,0,3,0">
                <local:PasswordHelper.Password>
                    <Binding Path="Administrator.Password" UpdateSourceTrigger="PropertyChanged" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow}">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule ValidatesOnTargetUpdated="False"></DataErrorValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </local:PasswordHelper.Password>
            </PasswordBox>
            <Button x:Name="btnAdminBack" Content="Back" Margin="10,0,0,10" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="50" Click="btnAdminBack_Click"/>
            <Button x:Name="btnAdminNext" Content="Next" Margin="0,0,10,10" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="50" Click="btnAdminNext_Click">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"></Setter>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=textUsername, Path=(Validation.HasError)}" Value="False"/>
                                    <Condition Binding="{Binding ElementName=textPassword, Path=(Validation.HasError)}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"></Setter>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="10,20,0,0" Text="Setup Administrator" TextWrapping="Wrap" VerticalAlignment="Top" RenderTransformOrigin="0.881,0.559" FontSize="16"/>
        </Grid>
        <Grid x:Name="containerPublish" Visibility="Hidden">
            <Label x:Name="label2" Content="Physical path:" HorizontalAlignment="Left" Margin="10,87,0,0" VerticalAlignment="Top" Padding="0,0,0,0" Height="20"/>
            <Label x:Name="label3" Content="Site name:" HorizontalAlignment="Left" Margin="10,115,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.335,0.584" Padding="0,0,0,0" Height="20"/>
            <Label x:Name="label5" Content="Appliation Alias:" HorizontalAlignment="Left" Margin="10,143,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.335,0.584" Padding="0,0,0,0" Height="20"/>

            <TextBox x:Name="textTargetFolder" Margin="103,87,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="{Binding SitePublishModel.TargetFolder, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Height="20" HorizontalAlignment="Left" Width="220" IsReadOnly="True" Style="{DynamicResource ValidatingControl}" Padding="3,1,3,0"/>
            <Button x:Name="btnBrowse" Content="Browse" Margin="328,87,0,0" Height="20" VerticalAlignment="Top" Click="btnBrowse_Click" HorizontalAlignment="Left" Width="50"/>

            <ComboBox x:Name="cmbSiteName" Margin="103,115,0,0" VerticalAlignment="Top" IsTextSearchEnabled="False" SelectedIndex="0" Height="20" Width="220" HorizontalAlignment="Left" Padding="6,1,5,0"
                      SelectedValue="{Binding SitePublishModel.SiteName, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"
                      ItemsSource="{Binding SiteNamesModel.SiteNames, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}">
            </ComboBox>
            
            <TextBox x:Name="textApplicationPath" Margin="103,143,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Text="{Binding SitePublishModel.AppPath, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Height="20" HorizontalAlignment="Left" Width="220" Style="{DynamicResource ValidatingControl}" Padding="3,1,3,0"/>
            <Button x:Name="btnPublishBack" Content="Back" Margin="10,0,0,10" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Left" Width="50" Click="btnPublishBack_Click"/>
            <Button x:Name="btnInstall" Content="Install" Margin="0,0,10,10" Height="20" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="50" Click="btnInstall_Click">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="IsEnabled" Value="False"></Setter>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=textApplicationPath}" Value="False"></Condition>
                                    <Condition Binding="{Binding Path=(Validation.HasError), ElementName=textTargetFolder}" Value="False"></Condition>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="True"></Setter>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <TextBlock x:Name="textBlock2" HorizontalAlignment="Left" Margin="10,20,0,0" Text="Website Settings" TextWrapping="Wrap" VerticalAlignment="Top" RenderTransformOrigin="0.881,0.559" FontSize="16"/>

        </Grid>
        <Grid x:Name="containerOutput" Margin="10,10,10,10" Visibility="Hidden">
            <ScrollViewer x:Name="scrollViewerOutput" VerticalScrollBarVisibility="Auto">
                <TextBlock x:Name="textConsoleOutput" Background="#FFD3D2D2" Text="{Binding ConsoleOutput.Text, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" Padding="5,5,5,5"/>
            </ScrollViewer>
        </Grid>
    </Grid>
</Window>
